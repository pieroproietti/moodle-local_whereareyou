import { defineConfig, globalIgnores } from "eslint/config";
import babel from "@babel/eslint-plugin";
import promise from "eslint-plugin-promise";
import jsdoc from "eslint-plugin-jsdoc";
import globals from "globals";
import babelParser from "@babel/eslint-parser";
import path from "node:path";
import { fileURLToPath } from "node:url";
import js from "@eslint/js";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const compat = new FlatCompat({
    baseDirectory: __dirname,
    recommendedConfig: js.configs.recommended,
    allConfig: js.configs.all
});

export default defineConfig([globalIgnores([
    "!.grunt",
    "*/**/yui/src/*/meta/",
    "*/**/build/",
    "**/node_modules/",
    "**/vendor/",
    "admin/tool/componentlibrary/amd/src/lunr.js",
    "admin/tool/messageinbound/roundcube/",
    "admin/tool/mfa/factor/totp/extlib/OTPHP/",
    "admin/tool/mfa/factor/totp/extlib/ParagonIE/ConstantTime/",
    "admin/tool/policy/amd/src/jquery-eu-cookie-law-popup.js",
    "enrol/lti/ims-blti/",
    "filter/algebra/AlgParser.pm",
    "filter/codehighlighter/amd/src/prism.js",
    "filter/tex/mimetex.*",
    "h5p/h5plib/v127/joubel/core/",
    "h5p/h5plib/v127/joubel/editor/",
    "lib/editor/tiny/plugins/html/amd/src/codemirror-lazy.js",
    "lib/editor/tiny/plugins/html/amd/src/beautify/",
    "lib/editor/tiny/plugins/recordrtc/amd/src/lame.all.js",
    "lib/editor/tiny/js/tinymce/",
    "lib/adodb/",
    "lib/behat/axe/",
    "lib/composer/pcre/",
    "lib/bennu/",
    "lib/evalmath/",
    "lib/phpspreadsheet/phpspreadsheet/",
    "lib/phpspreadsheet/markbaker/complex/",
    "lib/phpspreadsheet/markbaker/matrix/",
    "lib/google/",
    "lib/htmlpurifier/",
    "lib/minify/matthiasmullie-minify/",
    "lib/minify/matthiasmullie-pathconverter/",
    "lib/pear/HTML/Common.php",
    "lib/pear/HTML/QuickForm.php",
    "lib/pear/HTML/QuickForm/",
    "lib/pear/PEAR.php",
    "lib/phpmailer/",
    "lib/simplepie/",
    "lib/tcpdf/",
    "lib/yuilib/",
    "lib/yuilib/gallery/",
    "lib/jquery/",
    "lib/html2text/",
    "lib/markdown/",
    "lib/xhprof/",
    "lib/requirejs/",
    "lib/amd/src/loglevel.js",
    "lib/mustache/",
    "lib/amd/src/mustache.js",
    "lib/graphlib.php",
    "lib/php-css-parser/",
    "lib/rtlcss/",
    "lib/scssphp/",
    "lib/openspout/",
    "lib/amd/src/chartjs-lazy.js",
    "lib/maxmind/GeoIp2/",
    "lib/maxmind/MaxMind/",
    "lib/ltiprovider/",
    "lib/lti1p3/",
    "lib/amd/src/truncate.js",
    "lib/fonts/",
    "lib/amd/src/adapter.js",
    "lib/validateurlsyntax.php",
    "lib/amd/src/popper.js",
    "lib/amd/src/popper2.js",
    "lib/geopattern-php/",
    "lib/php-jwt/",
    "lib/polyfills/",
    "lib/emoji-data/",
    "lib/plist/",
    "lib/zipstream/",
    "lib/psr/container/",
    "lib/psr/clock/",
    "lib/psr/http-client/",
    "lib/psr/http-factory/",
    "lib/psr/http-message/",
    "lib/psr/http-server-handler/",
    "lib/psr/http-server-middleware/",
    "lib/psr/event-dispatcher/",
    "lib/psr/log/",
    "lib/psr/simple-cache/",
    "lib/phpxmlrpc/",
    "lib/guzzlehttp/guzzle/",
    "lib/guzzlehttp/promises/",
    "lib/ralouphie/getallheaders/",
    "lib/guzzlehttp/psr7/",
    "lib/symfony/deprecation-contracts/",
    "lib/guzzlehttp/kevinrob/guzzlecache/",
    "lib/webauthn/",
    "lib/aws-sdk/",
    "lib/jmespath/",
    "lib/laravel/serializable-closure/",
    "lib/php-di/php-di/",
    "lib/php-di/invoker/",
    "lib/slim/slim/",
    "lib/nikic/fast-route/",
    "lib/spatie/php-cloneable/",
    "lib/giggsey/libphonenumber-for-php-lite/",
    "media/player/videojs/amd/src/video-lazy.js",
    "media/player/videojs/amd/src/Youtube-lazy.js",
    "media/player/videojs/videojs/",
    "media/player/videojs/amd/src/local/ogv/ogv.js",
    "media/player/videojs/ogvjs/",
    "media/player/videojs/amd/src/videojs-ogvjs-lazy.js",
    "mod/assign/feedback/editpdf/fpdi/",
    "repository/s3/S3.php",
    "theme/boost/scss/bootstrap/",
    "theme/boost/amd/src/bootstrap/",
    "theme/boost/amd/src/index.js",
    "theme/boost/scss/fontawesome/",
]), {
    extends: compat.extends("eslint:recommended", "plugin:promise/recommended"),

    plugins: {
        "@babel": babel,
        promise,
        jsdoc,
    },

    linterOptions: {
        reportUnusedDisableDirectives: true,
    },

    languageOptions: {
        globals: {
            ...globals.browser,
            ...globals.amd,
            M: true,
            Y: true,
        },
    },

    rules: {
        "comma-dangle": "off",
        "no-console": "error",
        "no-empty": "warn",
        "no-extra-parens": "off",
        "no-prototype-builtins": "off",
        "no-unreachable": "warn",
        "array-callback-return": "warn",
        "block-scoped-var": "warn",
        complexity: "warn",
        "consistent-return": "warn",
        curly: "error",
        "dot-notation": "warn",
        "no-alert": "warn",
        "no-caller": "error",
        "no-div-regex": "error",
        "no-empty-function": "warn",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "warn",
        "no-floating-decimal": "warn",
        "no-global-assign": "warn",
        "no-implied-eval": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-labels": "error",
        "no-loop-func": "error",
        "no-multi-spaces": "warn",
        "no-multi-str": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal-escape": "error",
        "no-proto": "error",
        "no-redeclare": "warn",

        "no-restricted-globals": ["error", {
            name: "Notification",
        }],

        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "warn",
        "no-throw-literal": "warn",
        "no-unmodified-loop-condition": "error",
        "no-unused-expressions": "error",
        "no-useless-call": "warn",
        "no-useless-escape": "warn",
        "wrap-iife": ["error", "any"],
        "no-undef-init": "error",

        "no-unused-vars": ["error", {
            caughtErrors: "none",
        }],

        "array-bracket-spacing": "warn",
        "block-spacing": "warn",
        "brace-style": ["warn", "1tbs"],
        camelcase: "warn",

        "capitalized-comments": ["warn", "always", {
            ignoreConsecutiveComments: true,
        }],

        "comma-spacing": ["warn", {
            before: false,
            after: true,
        }],

        "comma-style": ["warn", "last"],
        "computed-property-spacing": "error",
        "consistent-this": "off",
        "eol-last": "off",
        "func-call-spacing": ["warn", "never"],
        "func-names": "off",
        "func-style": "off",

        indent: ["off", 4, {
            SwitchCase: 1,
        }],

        "key-spacing": ["warn", {
            beforeColon: false,
            afterColon: true,
            mode: "minimum",
        }],

        "keyword-spacing": "warn",
        "linebreak-style": ["error", "unix"],
        "lines-around-comment": "off",
        "max-len": ["error", 132],
        "max-lines": "off",
        "max-depth": "warn",
        "max-nested-callbacks": ["warn", 5],
        "max-params": "off",
        "max-statements": "off",

        "max-statements-per-line": ["warn", {
            max: 2,
        }],

        "new-cap": ["warn", {
            properties: false,
        }],

        "new-parens": "warn",
        "newline-per-chained-call": "off",
        "no-array-constructor": "off",
        "no-bitwise": "error",
        "no-continue": "off",
        "no-inline-comments": "off",
        "no-lonely-if": "off",
        "no-mixed-operators": "off",
        "no-multiple-empty-lines": "warn",
        "no-negated-condition": "off",
        "no-nested-ternary": "warn",
        "no-new-object": "off",
        "no-plusplus": "off",
        "no-tabs": "error",
        "no-ternary": "off",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": "off",
        "no-unneeded-ternary": "off",
        "no-whitespace-before-property": "warn",
        "object-curly-newline": "off",
        "object-curly-spacing": "warn",
        "object-property-newline": "off",
        "one-var": "off",
        "one-var-declaration-per-line": ["warn", "initializations"],
        "operator-assignment": "off",
        "operator-linebreak": "off",
        "padded-blocks": "off",

        "quote-props": ["warn", "as-needed", {
            unnecessary: false,
            keywords: true,
            numbers: true,
        }],

        quotes: "off",
        semi: "error",

        "semi-spacing": ["warn", {
            before: false,
            after: true,
        }],

        "sort-vars": "off",
        "space-before-blocks": "warn",
        "space-before-function-paren": ["warn", "never"],
        "space-in-parens": "warn",
        "space-infix-ops": "warn",
        "space-unary-ops": "warn",
        "spaced-comment": "warn",
        "unicode-bom": "error",
        "wrap-regex": "off",
        "promise/always-return": "warn",
        "promise/no-return-wrap": "warn",
        "promise/param-names": "warn",

        "promise/catch-or-return": ["warn", {
            terminationMethod: ["catch", "fail", "always"],
            allowFinally: true,
        }],

        "promise/no-native": "warn",
        "promise/avoid-new": "warn",

        "no-restricted-properties": ["warn", {
            object: "M",
            property: "str",
            message: "Use \"core/str\" module or M.util.get_string()",
        }],
    },
}, {
    files: ["**/yui/src/**/*.js"],

    languageOptions: {
        globals: {},
    },

    rules: {
        "no-undef": "off",
        "no-unused-vars": "off",
        "no-unused-expressions": "off",
        "jsdoc/check-access": "off",
        "jsdoc/check-alignment": "off",
        "jsdoc/check-param-names": "off",
        "jsdoc/check-property-names": "off",
        "jsdoc/empty-tags": "off",
        "jsdoc/implements-on-classes": "off",
        "jsdoc/multiline-blocks": "off",
        "jsdoc/require-jsdoc": "off",
        "jsdoc/require-param": "off",
        "jsdoc/require-param-name": "off",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-property": "off",
        "jsdoc/require-property-name": "off",
        "jsdoc/require-property-type": "off",
    },
}, {
    files: [
        "**/amd/src/*.js",
        "**/amd/src/**/*.js",
        "**/Gruntfile.js",
        ".grunt/*.js",
        ".grunt/tasks/*.js",
        "**/jsdoc.conf.js",
    ],

    languageOptions: {
        parser: babelParser,
        ecmaVersion: 5,
        sourceType: "module",

        parserOptions: {
            requireConfigFile: false,
        },
    },

    rules: {
        "no-implicit-globals": "error",
        "new-cap": "off",
        "no-invalid-this": "off",
        "object-curly-spacing": "off",
        quotes: "off",
        semi: "off",
        "no-unused-expressions": "off",

        "@babel/new-cap": ["warn", {
            properties: false,
        }],

        "@babel/no-invalid-this": "off",
        "@babel/object-curly-spacing": "warn",
        "@babel/semi": "error",
        "@babel/no-unused-expressions": "error",
        "promise/no-native": "off",
        "promise/avoid-new": "off",
        "jsdoc/check-access": "error",
        "jsdoc/check-alignment": 1,
        "jsdoc/check-param-names": "error",
        "jsdoc/check-property-names": "error",
        "jsdoc/empty-tags": "error",
        "jsdoc/implements-on-classes": "error",
        "jsdoc/multiline-blocks": "error",
        "jsdoc/require-jsdoc": "error",
        "jsdoc/require-param": "error",
        "jsdoc/require-param-name": "error",
        "jsdoc/require-param-type": "error",
        "jsdoc/require-property": "error",
        "jsdoc/require-property-name": "error",
        "jsdoc/require-property-type": "error",
    },
}]);